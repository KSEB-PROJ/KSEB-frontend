/* --- 키프레임 애니메이션 --- */
@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

@keyframes popIn {
    from {
        opacity: 0;
        transform: translateY(20px) scale(0.97);
    }

    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes popOut {
    from {
        opacity: 1;
        transform: translateY(0) scale(1);
    }

    to {
        opacity: 0;
        transform: translateY(20px) scale(0.97);
    }
}

/* --- 모달 오버레이 --- */
.modalOverlay {
    position: fixed;
    inset: 0;
    z-index: 2000;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem;
    background: rgba(18, 18, 18, 0.7);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    animation: fadeIn 0.4s ease-out forwards;
}

.modalOverlay.closing {
    animation: fadeOut 0.3s ease-out forwards;
}

/* --- 모달 컨텐츠 --- */
.modalContent {
    width: 100%;
    max-width: 480px;
    border-radius: 20px;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.1);
    position: relative;
    padding: 2.5rem;
    background: radial-gradient(ellipse at 50% -50%, rgba(var(--group-color, 132, 0, 255), 0.1), transparent 80%), #1c1c1c;
    animation: popIn 0.4s cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

.modalContent.closing {
    animation: popOut 0.3s cubic-bezier(0.7, 0, 0.84, 0) forwards;
}

/* --- 닫기 버튼 --- */
.closeButton {
    position: absolute;
    top: 1.25rem;
    right: 1.25rem;
    z-index: 20;
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: #aaa;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.2s ease;
}

.closeButton:hover {
    background: rgba(var(--group-color, 132, 0, 255), 0.5);
    color: #fff;
    transform: rotate(90deg) scale(1.1);
}

/* --- 모달 헤더 --- */
.modalHeader {
    text-align: center;
    margin-bottom: 2.5rem;
}

.headerIcon {
    width: 56px;
    height: 56px;
    margin: 0 auto 1.5rem;
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.8rem;
    color: #fff;
    background: linear-gradient(135deg, rgba(var(--group-color, 132, 0, 255), 0.6), rgba(var(--group-color, 132, 0, 255), 0.3));
    border: 1px solid rgba(var(--group-color, 132, 0, 255), 0.5);
    box-shadow: 0 0 20px rgba(var(--group-color, 132, 0, 255), 0.2);
}

.modalHeader h2 {
    font-size: 1.8rem;
    font-weight: 600;
    color: #fff;
    margin: 0 0 0.5rem;
}

.modalHeader p {
    font-size: 1rem;
    color: #a0a0a0;
    margin: 0;
    line-height: 1.6;
}

/* --- 입력창 그룹 --- */
.inputGroup {
    position: relative;
    margin-bottom: 2rem;
}

.input {
    width: 100%;
    background: #252528;
    border: 1px solid #555;
    border-radius: 12px;
    padding: 1.2rem;
    color: #fff;
    font-size: 1.1rem;
    outline: none;
    transition: all 0.2s ease;
}

.label {
    position: absolute;
    top: 1.2rem;
    left: 1.2rem;
    color: #999;
    pointer-events: none;
    transition: all 0.2s ease;
    background: #252528;
    padding: 0 0.25rem;
}

/* input:not(:placeholder-shown) 선택자는 placeholder가 비어있지 않을 때만 동작.
   tsx 파일에서 placeholder=" " 로 설정해서 input에 글자를 입력하기 시작하면 조건이 만족되어 label이 올라감.
   값이 없을 때는 label이 placeholder의 위치에 고정. */
.input:focus+.label,
.input:not(:placeholder-shown)+.label {
    top: -0.75rem;
    left: 1rem;
    font-size: 0.8rem;
    color: rgb(var(--group-color, 132, 0, 255));
    background: #1c1c1c;
}

.input:focus {
    border-color: rgb(var(--group-color, 132, 0, 255));
    box-shadow: 0 0 0 3px rgba(var(--group-color, 132, 0, 255), 0.2);
}

/* --- 생성 버튼 --- */
.createButton {
    width: 100%;
    padding: 1rem;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 600;
    color: #fff;
    cursor: pointer;
    background: rgb(var(--group-color, 132, 0, 255));
    box-shadow: 0 4px 20px -5px rgba(var(--group-color, 132, 0, 255), 0.5);
    transition: all 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.75rem;
}

.createButton:hover:not(:disabled) {
    transform: translateY(-3px);
    filter: brightness(1.15);
    box-shadow: 0 8px 25px -5px rgba(var(--group-color, 132, 0, 255), 0.6);
}

.createButton:disabled {
    background: #444;
    color: #888;
    cursor: not-allowed;
    box-shadow: none;
}

.createButton svg {
    transition: transform 0.3s ease;
}

.createButton:hover:not(:disabled) svg {
    transform: translateX(4px);
}