@keyframes live-bg {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}
@keyframes overlay-in {
    from { opacity: 0; }
    to { opacity: 1; }
}
@keyframes card-in {
    from {
        opacity: 0;
        transform: scale(0.9) translateY(20px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

/* 전체 레이아웃 */
.menu {
    /* --group-color 변수를 사용하도록 수정, JS에서 값을 주입받음 */
    --group-color-fallback: 132, 0, 255; /* JS 실패 시 대비용 */
    width: 80px;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1000;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    transition: width .4s cubic-bezier(0.2, 0.9, 0.3, 1.2), background .4s ease;
    font-family: sans-serif;
    display: flex;
    flex-direction: column;
    background: linear-gradient(170deg, rgba(var(--group-color, var(--group-color-fallback)), 0.15), rgba(var(--group-color, var(--group-color-fallback)), 0.05) 30%, #000 70%);
    background-size: 200% 200%;
    animation: live-bg 15s ease infinite;
}
.menu.open {
    width: 280px;
}
.menu a {
    text-decoration: none;
    color: #eef0f4;
}

/* 상단 액션 바 */
.actionBar {
    padding: 0 1rem;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    position: relative;
    height: 65px;
    justify-content: space-between;
}

/* 그룹 크레스트(아이콘) */
.groupCrest {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    flex-shrink: 0;
    position: relative;
    z-index: 10;
    transition: transform 0.3s ease;
}
.groupCrest:hover {
    transform: scale(1.1);
}
.crestInner {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    font-weight: 700;
    color: #fff;
    background: linear-gradient(45deg, rgba(var(--group-color, var(--group-color-fallback)), 1), rgba(var(--group-color, var(--group-color-fallback)), 0.7));
    box-shadow: 0 0 15px -2px rgba(var(--group-color, var(--group-color-fallback)), 0.5);
    transition: background .4s ease, box-shadow .4s ease;
}

/* 그룹명 */
.groupDisplay {
    display: flex;
    align-items: center;
    flex-grow: 1;
    margin-left: 15px;
    overflow: hidden;
    height: 100%;
}

/* 그룹 선택 오버레이 */
.groupOverlay {
    position: fixed;
    inset: 0;
    z-index: 1001;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: rgba(18, 18, 18, 0.5);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.4s ease;
    padding: 1rem;
}
.groupOverlay.open {
    opacity: 1;
    pointer-events: all;
    animation: overlay-in 0.4s ease;
}

/* 오버레이 내부 컨텐츠 (헤더 + 그룹 그리드) */
.overlayContent {
    max-width: 680px; /* 최대 너비 설정 */
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1.5rem; /* 헤더와 그리드 사이 간격 */
}

/* 오버레이 헤더 스타일 */
.overlayHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #fff;
    padding: 0 0.5rem; /* 좌우 패딩 추가 */
}
.overlayHeader h4 {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-shadow: 0 1px 3px rgba(0,0,0,0.2);
}
.closeOverlayBtn {
    background: rgba(255,255,255,0.1);
    border: 1px solid rgba(255,255,255,0.1);
    color: #fff;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.2s, transform 0.2s;
}
.closeOverlayBtn:hover {
    background: rgba(255,255,255,0.2);
    transform: rotate(90deg);
}

.groupGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 1.5rem;
    width: 100%;
}
.groupCard {
    --group-hover-color: rgba(var(--group-color-fallback), 0.2);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    cursor: pointer;
    padding: 1.5rem;
    border-radius: 12px;
    background: rgba(255,255,255,0.05);
    border: 1px solid rgba(255,255,255,0.1);
    transition: transform 0.2s, background-color 0.2s;
    opacity: 0;
    transform: scale(0.9) translateY(20px);
    animation: card-in 0.5s cubic-bezier(0.2, 0.9, 0.3, 1.2) forwards;
}
.groupCard:hover {
    transform: translateY(-5px);
    background: var(--group-hover-color);
}
.groupCardCrest {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    font-weight: 700;
    color: #fff;
}
.groupCardName {
    font-weight: 500;
    color: #e0e0e0;
}

.purple { background: linear-gradient(45deg, #8400ff, #c46eff); }
.teal { background: linear-gradient(45deg, #14d6ae, #59e4c5); }
.pink { background: linear-gradient(45deg, #ec4899, #f871b1); }
.blue { background: linear-gradient(45deg, #3b82f6, #60a5fa); }
.orange { background: linear-gradient(45deg, #f97316, #fb923c); }
.green { background: linear-gradient(45deg, #22c55e, #6ee7b7); }
.yellow { background: linear-gradient(45deg, #eab308, #fde047); }
.cyan { background: linear-gradient(45deg, #06b6d4, #67e8f9); }
.red { background: linear-gradient(45deg, #ef4444, #f87171); }
.indigo { background: linear-gradient(45deg, #6366f1, #a5b4fc); }


/* 메뉴 텍스트 */
.menuText {
    color: #a0a0a0;
    transform: translateX(-250px);
    opacity: 0;
    transition: transform .3s ease .1s, opacity .3s ease .1s, color .2s ease;
    white-space: nowrap;
}
.menuText.openText {
    opacity: 1;
    transform: translateX(0);
}

/* 메인 네비게이션 */
.optionsBar {
    position: relative;
    list-style: none;
    padding: 0 1rem;
    margin: 0;
    flex-shrink: 0;
}
.activeIndicator {
    position: absolute;
    left: 1rem;
    width: calc(100% - 2rem);
    border-radius: .5rem;
    transition: top 0.4s cubic-bezier(0.2, 0.9, 0.3, 1.2), height 0.4s cubic-bezier(0.2, 0.9, 0.3, 1.2), opacity 0.2s ease, background-color 0.4s ease;
    z-index: 0;
    background-color: rgb(var(--group-color, var(--group-color-fallback)));
}
.menuItem {
    list-style: none;
    position: relative;
    z-index: 1;
    height: 45px;
    margin: 0.5rem 0;
}
.menuOption {
    display: flex;
    align-items: center;
    gap: 20px;
    width: 100%;
    height: 100%;
    padding: 0 12px;
    border-radius: .5rem;
    cursor: pointer;
    overflow: hidden;
    color: #eef0f4;
    background-color: transparent;
    transition: background-color 0.2s ease, color 0.2s ease;
}
.menuOption:hover {
    background-color: rgba(255, 255, 255, 0.05);
}

.menu.open .menuOption.active,
.menu.open .menuOption:hover {
    color: #fff;
}
.menu.open .menuOption.active .icon,
.menu.open .menuOption:hover .icon {
    color: #fff;
}
.menu.open .menuOption.active .menuText {
    color: #fff;
}
.icon {
    font-size: 1.1rem;
    min-width: 20px;
    text-align: center;
    color: #a0a0a0;
    transition: color 0.2s ease;
}

.chatbotActive {
    background-color: rgba(var(--group-color, var(--group-color-fallback)), 0.15) !important;
    box-shadow: 0 0 15px -2px rgba(var(--group-color, var(--group-color-fallback)), 0.4);
}
.chatbotActive .icon, .chatbotActive .menuText {
    color: rgb(var(--group-color, var(--group-color-fallback))) !important;
    text-shadow: 0 0 10px rgba(var(--group-color, var(--group-color-fallback)), 0.7);
}

.menuBreak {
    padding: 0.5rem 1rem;
}
.menuBreak hr {
    border: none;
    height: 1px;
    background-color: rgba(255, 255, 255, 0.1);
}

/* 채널 섹션 */
.channelSection {
    padding: 0 1rem;
    flex-grow: 1;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}
.channelHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 10px 10px;
}
.addChannelBtn {
    background: none;
    border: none;
    color: #a0a0a0;
    cursor: pointer;
    font-size: 0.9rem;
    padding: 5px;
}
.addChannelBtn:hover {
    color: #fff;
}
.optionsBarChannel {
    list-style: none;
    padding: 0;
    margin: 0;
    position: relative;
}
.channelActiveIndicator {
    position: absolute;
    left: -8px;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    transition: top 0.4s cubic-bezier(0.2, 0.9, 0.3, 1.2), opacity 0.2s ease, background-color 0.4s ease;
    transform: translateY(-50%);
    background-color: rgb(var(--group-color, var(--group-color-fallback)));
    box-shadow: 0 0 10px rgb(var(--group-color, var(--group-color-fallback)));
}
.channelItem {
    list-style: none;
    height: 45px;
    margin: 0.5rem 0;
    border-radius: .5rem;
    overflow: hidden;
    position: relative;
    z-index: 1;
}
.channelLink {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    height: 100%;
    color: #a0a0a0;
    transition: color 0.2s ease, background-color 0.2s ease;
}

.channelLink:hover {
    background-color: rgba(255, 255, 255, 0.05);
}
.channelLink:hover .menuText,
.channelLink:hover .icon {
    color: rgb(var(--group-color, var(--group-color-fallback)));
}
.channelLink.active .menuText {
    font-weight: 600;
}
.channelLink.active .icon {
    color: #fff;
}


.channelContent {
    display: flex;
    align-items: center;
    gap: 20px;
    width: 100%;
    height: 100%;
    padding: 0 12px;
    transition: padding-left 0.2s ease-in-out;
}
.dragHandle {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #888;
    cursor: grab;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
}
.draggableItem:hover .dragHandle {
    opacity: 1;
}
.draggableItem:hover .channelContent {
    padding-left: 30px;
}

.collapseSection {
    padding: 0.5rem 1rem;
    margin-top: auto;
}
.collapseButton {
    display: flex;
    align-items: center;
    gap: 20px;
    width: 100%;
    height: 100%;
    padding: 0 12px;
    height: 45px;
    border-radius: .5rem;
    cursor: pointer;
    overflow: hidden;
    color: #a0a0a0;
    background-color: transparent;
    border: none;
    transition: background-color 0.2s ease, color 0.2s ease;
}
.collapseButton:hover {
    background-color: rgba(255, 255, 255, 0.05);
    color: #fff;
}
.collapseIcon {
    font-size: 1.1rem;
    min-width: 20px;
    text-align: center;
    transition: transform 0.4s cubic-bezier(0.2, 0.9, 0.3, 1.2);
}
.menu:not(.open) .collapseIcon {
    transform: rotate(180deg);
}

/* 프로필 섹션 */
.profileSection {
    padding: 0.5rem 1rem 1rem 1rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    flex-shrink: 0;
}
.profileLink {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 4px;
    border-radius: .5rem;
    position: relative;
    z-index: 1;
    transition: background-color .2s ease;
}
.profileLink:hover {
    background-color: rgba(255, 255, 255, 0.05);
}
.profileLink.profileActive {
    background-color: rgba(var(--group-color, var(--group-color-fallback)), 0.2);
}
.profileActive .profileIcon {
    color: #fff;
    background-color: rgb(var(--group-color, var(--group-color-fallback)));
    box-shadow: 0 0 10px rgba(var(--group-color, var(--group-color-fallback)), 0.7);
}
.profileActive .profileName, .profileActive .profileRole {
    color: #fff;
}
.profileDetails {
    display: flex;
    align-items: center;
    gap: 15px;
    transition: gap .2s ease;
}
.profileIcon {
    font-size: 1.5rem;
    min-width: 25px;
    height: 25px;
    color: #a0a0a0;
    padding: 8px;
    border-radius: 50%;
    background-color: #333;
    transition: color 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
}
.profileTextContainer {
    display: flex;
    flex-direction: column;
    color: #eef0f4;
    transform: translateX(-250px);
    opacity: 0;
    transition: transform .3s ease .1s, opacity .3s ease .1s;
    white-space: nowrap;
}
.profileTextContainer.openText {
    transform: translateX(0);
    opacity: 1;
}
.profileName {
    font-weight: 600;
    color: #eef0f4;
    transition: color 0.2s ease;
}
.profileRole {
    font-size: 0.8rem;
    color: #a0a0a0;
    transition: color 0.2s ease;
}
.menu:not(.open) .profileDetails {
    gap: 0;
}

/* 그룹 생성 카드에 대한 별도 스타일 */
.createGroupCard .groupCardCrest {
    background: #333;
    border: 2px dashed #666;
    transition: all 0.2s ease;
}
.createGroupCard:hover {
    background-color: rgba(255, 255, 255, 0.1); 
    transform: translateY(-5px); 
}
.createGroupCard:hover .groupCardCrest {
    background: #444; 
    border-color: #fff; 
    border-style: solid;
    transform: rotate(90deg);
}
.createGroupCard:hover .groupCardName {
    color: #fff; 
}